apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 1
  name: datalens-data-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: datalens-data-api
  template:
    metadata:
      labels:
        app: datalens-data-api
    spec:
      containers:
      - env:
        - name: GUNICORN_WORKERS_COUNT
          value: "5"
        - name: CACHES_ON
          value: "0"
        - name: RQE_FORCE_OFF
          value: "1"
        - name: MUTATIONS_CACHES_ON
          value: "0"
        - name: DL_CRY_ACTUAL_KEY_ID
          value: "key_1"
        - name: DL_CRY_KEY_VAL_ID_key_1
          value: "h1ZpilcYLYRdWp7Nk8X1M1kBPiUi8rdjz9oBfHyUKIk="
        - name: RQE_SECRET_KEY
          value: ""
        - name: US_HOST
          value: "http://datalens-us.{{namespace}}.svc.cluster.local"
        - name: US_MASTER_TOKEN
          value: "fake-us-master-token"
        - name: CONFIG_PATH
          value: "/etc/backend-configs/api.yaml"
        - name: BI_COMPENG_PG_ON
          value: "1"
        - name: BI_COMPENG_PG_URL
          value: "postgresql://postgres:postgres@pg-compeng-0.pg-compeng-headless.{{namespace}}.svc.cluster.local:5432/postgres"
        image: "{{ str(images.datalens_data_api) }}"
        name: datalens-data-api
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        volumeMounts:
        - mountPath: /etc/backend-configs/api.yaml
          name: config
          subPath: api.yaml
      volumes:
      - configMap:
          defaultMode: 420
          name: control-api-config
        name: config
---
apiVersion: v1
kind: Service
metadata:
  name: datalens-data-api
spec:
  type: ClusterIP
  ports:
    - port: 8080
      protocol: TCP
      name: http
  selector:
    app: datalens-data-api
